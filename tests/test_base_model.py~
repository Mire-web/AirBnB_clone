#!/usr/bin/python3
"""
Unit Tests for the Base Model class methods
"""
import unittest
from models.base_model import BaseModel
from datetime import datetime

class TestBaseModel(unittest.Testcase):
    def setUp(self):
        my_model_1 = BaseModel()
        my_model_2 = BaseModel()

    def test_init(self):
        self.assertEqual(type(self.my_model_1.id), 'str')
        self.assertEqual(type(self.my_model_2.id), 'str')
        self.assertNotEqual(self.my_model_1.id, self.my_model_2.id)
        self.assertEqual(type(self.my_model_1.created_at), 'datetime.datetime')
        self.assertEqual(type(self.my_model_1.updated_at), 'datetime.datetime')
        self.assertEqual(type(self.my_model_2.created_at), 'datetime.datetime')
        self.assertEqual(type(self.my_model_2.updated_at), 'datetime.datetime')
    
    def test_str_method(self):
        self.assertEqual(self.my_model_1.__str__, f'[{self.__class__.__name}] ({self.id}) {self.__dict__}')
        self.assertEqual(self.my_model_1.__str__, f'[{self.__class__.__name}] ({self.id}) {self.__dict__}')
        
    def test_date_time(self):
        old_date_1 = str(my_model_1.updated_at)
        old_date_2 = str(my_model_2.updated_at)
        self.my_model_1.save()
        self.my_model_2.save()
        new_date_1 = str(my_model_1.updated_at)
        new_date_2 = str(my_model_2.updated_at)
        self.assertNotEqual(old_date_1, new_date_1)
        self.assertNotEqual(old_date_2, new_date_2)
    
    def test_to_dict(self):
        model_class_1 = my_model_1.to_dict()
        model_class_2 = my_model_2.to_dict()
        self.assertEqual(type(model_class_1['created_at']), 'str')
        self.assertEqual(type(model_class_1['updated_at']), 'str')
        self.assertEqual(model_class_1['__class__'], f'{self.my_model_1.__class__.__name__}')
        self.assertEqual(type(model_class_2['created_at']), 'str')
        self.assertEqual(type(model_class_2['updated_at']), 'str')
        self.assertEqual(model_class_2['__class__'], f'{self.my_model_2.__class__.__name__}')
        date_format = '%Y-%m-%dT%H:%M:%S.%f'
        self.assertTrue(datetime.strptime(model_class_1['created_at'], date_format))
        self.assertTrue(datetime.strptime(model_class_2['created_at'], date_format))
        self.assertTrue(datetime.strptime(model_class_1['updated_at'], date_format))
        self.assertTrue(datetime.strptime(model_class_2['updated_at'], date_format))
        
    def tearDown(self):
        del my_model_1
        del my_model_2
